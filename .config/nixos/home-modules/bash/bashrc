#!/bin/bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# working with dotfiles version control
alias dots='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias d='dots'

# faster text editing potential
alias vi='nvim'
alias g='git'

# nice colorizing
alias ls='ls --color=auto'
alias grep='grep --color=auto'

# vimy bash exiting
alias :q='exit'
alias :wq='exit'

# tar help
alias tar-unzip='tar -xvzf'

# update pacman mirrors
# NOTE: this command assumes you changed your mirror list to a file called
# `newmirrorlist` in `/etc/pacman.d/`. This is nice because it keeps the
# original mirror list as a backup.
alias pacman-update-mirrors='sudo reflector --verbose -c "United States" --latest 5 --age 12 --protocol http,https --sort rate --save /etc/pacman.d/newmirrorlist'

# quicker updates
alias update='sudo pacman -Syu'

# navigation
alias ..='cd ..'

# easier python usage
alias py='python3'

# easier opening
alias open='xdg-open'

# system configuring
alias nix:rebuild='sudo nixos-rebuild switch --flake "$HOME/.config/nixos/"'
alias nix:update='nix flake update --flake "$HOME/.config/nixos/"'

# like resourcing but nicer
alias refresh='clear && fastfetch'

# simple way to count lines of code in the current directory
# `loc [extension]`
loc() {
    if [[ -z "$1" ]]; then
        find . -regextype sed -not -regex '\./\.git.*' -type f -exec wc -l {} + | sort -n
    else
        find . -regextype sed -not -regex '\./\.git.*' -regex ".*\.$1" -type f -exec wc -l {} + | sort -n
    fi
}

# find and replace in a directory (current by default)
# ignores hidden files
# `replace <before> <after> [directory]`
replace() {
    rg -l --no-hidden "$1" "${3-.}" | xargs sd "$1" "$2"
}

CDPATH=.:$HOME

# Cool `PS1` prompt
# NOTE: on Konsole or Kitty with transparent background the parts of the prompts
# that share the same color as the background color (if any, determined by color
# scheme) will also be transparent. Workaround is only to disable transparency
# or change that base color of the scheme (usually 0) to, say, 1 value off of
# the original. Hacky but works.
PROMPT_COMMAND=_prompt_command
_prompt_command() {
    if [ $? -eq 0 ]; then
        local color='2'
    else
        local color='1'
    fi
    # shellcheck disable=SC2025
    PS1="\e[3${color}mâ•­\e[40mâ”¨\e[36;40m ïŒ“ \e[37;1m\u \e[0;30;4${color}mî‚° \e[3;1;30m\w \e[0;3${color}mî‚°\n\e[3${color}mâ•°â”€ðŸ¢’\e[3;33m\$ \e[0m"
}

# don't put duplicate lines or lines starting with space in the history
HISTCONTROL=ignoreboth

## EXPORTED VARIABLES
# various environment variables for program configuration
export BAT_THEME="bamboo"
export RIPGREP_CONFIG_PATH="$HOME/.config/rg/ripgreprc"
export EZA_COLORS="reset"
# set editor
export VISUAL=nvim
export EDITOR=nvim
# access Node.js dependencies from Bash prompt when in project root
export PATH=$PATH:./node_modules/.bin
export MANWIDTH=80
export MANPAGER='nvim +Man!' # nice nvim man paging
# NOTE: Uncomment for less paging
# export MANPAGER='less -s -M +Gg'    # for percentages when using less paging
# less colors for man pages
export LESS_TERMCAP_mb=$'\e[1;35m'  # begin bold
export LESS_TERMCAP_md=$'\e[1;34m'  # begin blink
export LESS_TERMCAP_so=$'\e[03;90m' # begin reverse video
export LESS_TERMCAP_us=$'\e[01;31m' # begin underline
export LESS_TERMCAP_me=$'\e[0m'     # reset bold/blink
export LESS_TERMCAP_se=$'\e[0m'     # reset reverse video
export LESS_TERMCAP_ue=$'\e[0m'     # reset underline
export GROFF_NO_SGR=1               # for color interpretation

# no symlink following for `cd`, etc.
set -o physical

# start shell with fastfetch
fastfetch

## Sourcery
# blesh
# shellcheck disable=SC1091
source "$(blesh-share)"/ble.sh
